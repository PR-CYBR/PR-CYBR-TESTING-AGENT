name: Commit Discussion Updates

on:
  push:
    branches:
      - main
  workflow_dispatch:

env:
  SECURITY_DISCUSSION_NUMBER: ${{ vars.SECURITY_DISCUSSION_NUMBER || secrets.SECURITY_DISCUSSION_NUMBER }}

jobs:
  summarize-commit-activity:
    name: Summarize commit activity
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Collect commit summary
        id: collect
        shell: bash
        run: |
          RANGE_START="${{ github.event.before }}"
          RANGE_END="${{ github.sha }}"
          if [ -z "$RANGE_START" ] || [ "$RANGE_START" = "0000000000000000000000000000000000000000" ]; then
            RANGE="$RANGE_END"
          else
            RANGE="$RANGE_START..$RANGE_END"
          fi
          echo "range=$RANGE" >> "$GITHUB_OUTPUT"
          {
            echo "message<<'EOF'"
            git log "$RANGE" --no-decorate --stat
            echo EOF
          } >> "$GITHUB_OUTPUT"

      - name: Post commit summary to Security & Compliance board
        if: ${{ always() }}
        uses: actions/github-script@v7
        env:
          COMMIT_RANGE: ${{ steps.collect.outputs.range }}
          COMMIT_MESSAGE: ${{ steps.collect.outputs.message }}
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const discussionNumber = process.env.SECURITY_DISCUSSION_NUMBER;
            if (!discussionNumber) {
              core.setFailed('SECURITY_DISCUSSION_NUMBER is not configured.');
              return;
            }

            const summaryLines = [
              `**Workflow**: ${context.workflow}`,
              `**Run URL**: ${context.serverUrl}/${context.repo.owner}/${context.repo.repo}/actions/runs/${context.runId}`,
              `**Event**: ${context.eventName}`,
              `**Commit range**: ${process.env.COMMIT_RANGE || 'n/a'}`,
              '',
              '```',
              process.env.COMMIT_MESSAGE || 'No commits to display.',
              '```'
            ];

            await github.rest.discussions.createComment({
              owner: context.repo.owner,
              repo: context.repo.repo,
              discussion_number: Number(discussionNumber),
              body: summaryLines.join('\n')
            });
