name: tfc-speculative-run

on:
  pull_request:
    branches:
      - main
    paths:
      - '**/*.tf'
      - '.github/workflows/tfc-*.yml'

permissions:
  contents: read
  pull-requests: write

concurrency:
  group: tfc-speculative-${{ github.event.pull_request.number || github.ref }}
  cancel-in-progress: true

env:
  TF_CLOUD_ORGANIZATION: ${{ vars.TF_CLOUD_ORGANIZATION }}
  TF_API_TOKEN: ${{ secrets.TFC_API_TOKEN }}
  TF_WORKSPACE: ${{ vars.TF_WORKSPACE }}
  CONFIG_DIRECTORY: ${{ vars.TF_CONFIG_DIRECTORY || '.' }}

jobs:
  terraform-cloud-speculative-run:
    if: github.event.pull_request.head.repo.fork == false
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Validate workflow inputs
        run: |
          missing=0
          for var in TF_CLOUD_ORGANIZATION TF_WORKSPACE TF_API_TOKEN CONFIG_DIRECTORY; do
            if [ -z "${!var}" ]; then
              echo "::error::${var} is not configured."
              missing=1
            fi
          done
          if [ $missing -eq 1 ]; then
            echo "Required Terraform Cloud settings are missing. Configure repository variables/secrets before rerunning."
            exit 1
          fi

      - name: Upload configuration
        uses: hashicorp/tfc-workflows-github/actions/upload-configuration@v1.3.2
        id: upload
        with:
          workspace: ${{ env.TF_WORKSPACE }}
          directory: ${{ env.CONFIG_DIRECTORY }}
          speculative: true

      - name: Create speculative run
        uses: hashicorp/tfc-workflows-github/actions/create-run@v1.3.2
        id: run
        continue-on-error: true
        with:
          workspace: ${{ env.TF_WORKSPACE }}
          configuration_version: ${{ steps.upload.outputs.configuration_version_id }}
          plan_only: true
          message: "Speculative run triggered from GitHub Actions CI ${{ github.sha }}"

      - name: Capture plan output
        uses: hashicorp/tfc-workflows-github/actions/plan-output@v1.3.2
        id: plan-output
        with:
          plan: ${{ steps.run.outputs.plan_id }}

      - name: Upsert Terraform Cloud plan comment
        if: github.event_name == 'pull_request'
        uses: actions/github-script@v7
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const { data: comments } = await github.rest.issues.listComments({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: context.issue.number,
            });
            const botComment = comments.find(comment => comment.user.type === 'Bot' && comment.body.includes('Terraform Cloud Plan Output'));
            const output = `#### Terraform Cloud Plan Output\n\n` +
              `Plan: ${{ steps['plan-output'].outputs.add }} to add, ` +
              `${{ steps['plan-output'].outputs.change }} to change, ` +
              `${{ steps['plan-output'].outputs.destroy }} to destroy.\n` +
              `[View run in Terraform Cloud](${{ steps.run.outputs.run_link }})`;
            if (botComment) {
              await github.rest.issues.updateComment({
                owner: context.repo.owner,
                repo: context.repo.repo,
                comment_id: botComment.id,
                body: output,
              });
            } else {
              await github.rest.issues.createComment({
                owner: context.repo.owner,
                repo: context.repo.repo,
                issue_number: context.issue.number,
                body: output,
              });
            }

      - name: Ensure run completed successfully
        if: ${{ steps.run.outputs.run_status != 'planned_and_finished' }}
        run: |
          echo "Terraform Cloud run did not finish in planned_and_finished state."
          echo "Status: '${{ steps.run.outputs.run_status }}'"
          echo "URL: ${{ steps.run.outputs.run_link }}"
          exit 1

  terraform-cloud-fork-skip:
    if: github.event.pull_request.head.repo.fork == true
    runs-on: ubuntu-latest
    steps:
      - name: Skip Terraform Cloud workflow for forks
        run: |
          echo "Skipping Terraform Cloud speculative run for forked pull request."
          echo "Secrets are unavailable to workflows that originate from forks."
